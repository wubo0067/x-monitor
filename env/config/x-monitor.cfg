// Basic store information:
name = "x-monitor";

application =
{
    plugins_directory = "/home/calmwu/program/cpp_space/x-monitor/env/plugins.d";
    log_directory = "/var/log/x-monitor";
    log_config_file = "/home/calmwu/program/cpp_space/x-monitor/env/config/x-monitor-log.cfg";
    run_as_user = "calmwu";
    pid_file = "/tmp/x-monitor.pid";

    metrics_http_exporter = {
        port = 31079;
        iface = "ens160";
    };
};

plugin_proxy = {
    enable = true;
    bin = "/home/calmwu/cpp_space/x-monitor/tools/envoy/envoy";
    args = "--config-path /home/calmwu/cpp_space/x-monitor/env/config/proxy/x-monitor-envoy-cfg.yaml --log-path /var/log/x-monitor/envoy.log --log-level debug";
};

pluginsd = {
    enable = true;
    check_for_new_plugins_every = 5;
    timer = { enable = true;
              update_every = 1;
              command_options = "-c " };
    ebpf = { enable = false;
              update_every = 1;
              command_options = "" };
};

collector_plugin_proc = {
    enable = true;
    update_every = 1; #采集间隔
    diskstats = {
        enable = true;
        monitor_file = "/proc/diskstats";
    };
    loadavg = {
        enable = true;
        monitor_file = "/proc/loadavg";
    };
    stat = {
        enable = true;
        monitor_file = "/proc/stat";
    };
    pressure = {
        enable = true;
        monitor_cpu_file = "/proc/pressure/cpu";
        monitor_mem_file = "/proc/pressure/memory";
        monitor_io_file = "/proc/pressure/io";
    };
    meminfo = {
        enable = true;
        monitor_file = "/proc/meminfo";
    };
    vmstat = {
        enable = true;
        monitor_file = "/proc/vmstat";
        #swap_io_enable = true;
        #disk_io_enable = true;
        #memory_page_faults_enable = true;
        #out_of_memory_enable = true;
        #system_wide_numa_stat_enable = true;
    };
    netstat = {
        enable = true;
        monitor_file = "/proc/net/netstat";
    };
    net_snmp = {
        enable = true;
        monitor_file = "/proc/net/snmp";
    };
    net_dev = {
        enable = true;
        monitor_file = "/proc/net/dev";
        path_get_net_dev_is_virtual = "/sys/devices/virtual/net/%s";
        path_get_net_dev_mtu = "/sys/class/net/%s/mtu";
        path_get_net_dev_speed = "/sys/class/net/%s/speed";
        path_get_net_dev_duplex = "/sys/class/net/%s/duplex";
        exclude_down_net_dev = true;
    };
    net_stat_conntrack = {
        enable = true;
        monitor_file = "/proc/net/stat/nf_conntrack";
    };
    net_sockstat = {
        enable = true;
        monitor_file = "/proc/net/sockstat";
    };
    cgroups = {
        enable = true;
        monitor_file = "/proc/cgroups";
    };
    schedstat = {
        enable = true;
        monitor_file = "/proc/schedstat";
    };
};

collector_plugin_diskspace = {
    enable = true;
    update_every = 1; #采集间隔
    check_for_new_mountinfos_every = 15;
    exclude_mountpoints = "/proc/* /sys/* /var/run/user/* /run/user/* /snap/* /var/lib/docker/*";
    exclude_filesystems = "*gvfs *gluster* *s3fs *ipfs *davfs2 *httpfs *sshfs *gdfs *moosefs fusectl autofs rpc_pipefs hugetlbfs iso9660 devtmpfs debugfs tracefs";
}

collector_applications = {
    enable = true;
    update_every = 1; #采集间隔
    check_for_application_processes_every = 5; #检查应用对应进程的间隔

    # 必须以app_开头
    app_postgres_db = {
        enable = true;
        type = "postgres";
        app_instance_filter_content_type = "file";
        app_instance_filter_source = "/pacloud/postgres/etc/db_info.txt /paic/postgres/etc/db_info.txt";
        app_instance_keys_filter_regex_pattern = "^(\d+):(\S+):/.+"; # postgres_db实例关键字的过滤规则，通过找到对应pid和子进程
    };
}